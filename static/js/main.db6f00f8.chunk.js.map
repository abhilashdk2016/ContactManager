{"version":3,"sources":["components/layout/Header.js","Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/LifeCycleMethods.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","className","href","to","defaultProps","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","response","this","data","value","children","Component","Consumer","Contact","showContactInfo","handleShowClick","onDeleteClick","a","delete","name","email","phone","onClick","style","cursor","float","color","bind","marginRight","hidden","propType","PropTypes","object","isRequired","Contacts","deleteContact","newContacts","Fragment","key","deleteClickHandler","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","About","NotFound","LifeCycleMethods","title","body","console","log","fetch","then","json","EditContact","match","params","updContact","put","res","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db6f00f8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n    const { branding } = props;\n    return (\n        <nav className=\"nav navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n            <div className=\"container\">\n                <a href=\"/\" className=\"navbar-brand\">\n                    {branding}\n                </a>\n                <div>\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/\">\n                                <i className=\"fas fa-home\"></i>\n                                Home\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/contact/add\">\n                                <i className=\"fas fa-plus\"></i>\n                                Add Contact\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/about\">\n                                <i className=\"fas fa-question\"></i>\n                                About\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/lcm\">\n                                <i className=\"fas fa-refresh\"></i>\n                                Life Cycle Methods\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nHeader.defaultProps = {\n    branding: 'Contact Manager'\n};\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n};\n\nexport default Header;","import React, { Component } from 'react';\nimport axios from 'axios';\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            };\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            };\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(contact =>\n                    contact.id === action.payload.id ? contact = action.payload : contact)\n            };\n        default:\n            return state;\n    }\n}\n\nexport class Provider extends Component {\n    state = {\n        contacts: [],\n        dispatch: action => this.setState(state => reducer(state, action))\n    }\n\n    async componentDidMount() {\n        const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n        this.setState({ contacts: response.data });\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../Context';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Contact extends Component {\n\n    state = {\n        showContactInfo: true\n    }\n\n    handleShowClick = () => {\n        this.setState({ showContactInfo: !this.state.showContactInfo });\n    }\n\n    onDeleteClick = async (id, dispatch) => {\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n        dispatch({ type: 'DELETE_CONTACT', payload: id });\n        // this.props.deleteClickHandler();\n\n    }\n\n    render() {\n        const { name, email, phone, id } = this.props.contact;\n\n        return (\n            <Consumer>\n                {value => {\n                    return (\n                        <div className=\"card card-body mb-3\">\n                            <h4>\n                                {name}\n                                <i onClick={this.handleShowClick}\n                                    className={`fas ${this.state.showContactInfo ? 'fa-sort-down' : 'fa-sort-up'}`}\n                                    style={{ cursor: 'pointer' }}\n                                />\n                                <i className=\"fas fa-times\" style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                                    onClick={this.onDeleteClick.bind(this, id, value.dispatch)}\n                                />\n                                <Link to={`contact/edit/${id}`}>\n                                    <i\n                                        className=\"fas fa-pencil-alt\"\n                                        style={{\n                                            cursor: 'pointer',\n                                            float: 'right',\n                                            color: 'black',\n                                            marginRight: '1rem'\n                                        }}\n                                    >\n                                    </i>\n                                </Link>\n                            </h4>\n                            <ul className=\"list-group\" hidden={this.state.showContactInfo}>\n                                <li className=\"list-group-item\">Email: {email}</li>\n                                <li className=\"list-group-item\">Phone: {phone} </li>\n                            </ul>\n                        </div>\n                    );\n                }}\n            </Consumer>\n        );\n    }\n}\n\nContact.propType = {\n    contact: PropTypes.object.isRequired,\n    // deleteClickHandler: PropTypes.func.isRequired\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../Context';\n\nclass Contacts extends Component {\n\n    // state = {\n    //     contacts: [\n    //         {\n    //             id: 1,\n    //             name: 'Abhilash D K',\n    //             email: 'ab@gmail.com',\n    //             phone: '8861188582'\n    //         },\n    //         {\n    //             id: 2,\n    //             name: 'Navya BS',\n    //             email: 'nbs@gmail.com',\n    //             phone: '7766553242'\n    //         },\n    //         {\n    //             id: 3,\n    //             name: 'Carren',\n    //             email: 'carr@gmail.com',\n    //             phone: '6655443322'\n    //         }\n    //     ]\n    // }\n\n    // deleteContact = (id) => {\n    //     const { contacts } = this.state;\n    //     const newContacts = contacts.filter(contact => contact.id !== id);\n    //     this.setState({ contacts: newContacts });\n    // }\n\n    deleteContact = (id) => {\n        const { contacts } = this.state;\n        const newContacts = contacts.filter(contact => contact.id !== id);\n        this.setState({ contacts: newContacts });\n    }\n\n    // render() {\n    //     const { contacts } = this.state;\n    //     return (\n    //         <React.Fragment>\n    //             {contacts.map(contact => <Contact contact={contact}\n    //                 key={contact.id}\n    //                 deleteClickHandler={this.deleteContact.bind(this, contact.id)} />)}\n    //         </React.Fragment>\n    //     );\n    // }\n\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const { contacts } = value;\n                    return (\n                        <React.Fragment>\n                            <h1 className=\"display-4 mb-2\">\n                                <span className=\"text-danger\">Contact</span> List\n                            </h1>\n                            {contacts.map(contact => <Contact contact={contact}\n                                key={contact.id}\n                                deleteClickHandler={this.deleteContact.bind(this, contact.id)} />)}\n                        </React.Fragment>\n                    );\n                }}\n            </Consumer>\n        );\n    }\n}\n\nexport default Contacts;","// @flow \nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = (props) => {\n    const { label, name, value, placeholder, type, onChange, error } = props;\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input type={type}\n                className={classnames('form-control form-control-lg', {\n                    'is-invalid': error\n                })}\n                placeholder={placeholder}\n                name={name} value={value}\n                onChange={onChange} />\n            {\n                error && <div className=\"invalid-feedback\">\n                    {error}\n                </div>\n            }\n\n        </div>\n\n    );\n};\n\nTextInputGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    label: PropTypes.string.isRequired,\n    error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n};\n\nexport default TextInputGroup;","import React, { Component } from 'react';\nimport { Consumer } from '../../Context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        const { name, email, phone } = this.state;\n        if (name === '') {\n            this.setState({\n                errors: {\n                    name: 'Name is Required'\n                }\n            });\n            return;\n        }\n\n        if (email === '') {\n            this.setState({\n                errors: {\n                    email: 'Email is Required'\n                }\n            });\n            return;\n        }\n\n        if (phone === '') {\n            this.setState({\n                errors: {\n                    phone: 'Phone is Required'\n                }\n            });\n            return;\n        }\n\n        const newContact = {\n            name, email, phone\n        };\n\n        const response = await axios.post(`https://jsonplaceholder.typicode.com/users`, newContact);\n        dispatch({\n            type: 'ADD_CONTACT',\n            payload: response.data\n        });\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    }\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">\n                                ADD CONTACT\n                        </div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup label=\"Name\"\n                                        placeholder=\"Enter Name...\"\n                                        name=\"name\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name} />\n                                    <TextInputGroup label=\"Email\"\n                                        placeholder=\"Enter Email...\"\n                                        name=\"email\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        type=\"email\"\n                                        error={errors.email} />\n                                    <TextInputGroup label=\"Phone\"\n                                        placeholder=\"Enter Phone Number...\"\n                                        name=\"phone\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone} />\n                                    <input type=\"submit\" value=\"Add Contact\"\n                                        className=\"btn btn-block btn-light\" />\n                                </form>\n                            </div>\n                        </div>)\n                }}\n            </Consumer>\n        );\n    }\n}\n\nexport default AddContact;","import React from 'react';\n\nconst About = (props) => {\n    return (\n        <div>\n            <h1 className=\"display-4\">About Contact Manager</h1>\n            <p className=\"lead\">Simple app to manage contacts</p>\n            <p className=\"text-secondary\">Version 1.0.0</p>\n        </div>\n    );\n};\n\nexport default About;","import React from 'react';\n\nconst NotFound = () => {\n    return (\n        <div>\n            <h1 className=\"display-4 text-danger\">Page Not Found</h1>\n            <p className=\"lead\">Sorry, that page does not exist</p>\n        </div>\n    );\n};\n\nexport default NotFound;","import React, { Component } from 'react';\n\nclass LifeCycleMethods extends Component {\n\n    state = {\n        title: '',\n        body: ''\n    }\n\n    componentDidMount() {\n        console.log('Component Did Mount');\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\n            .then(response => response.json())\n            .then(json => this.setState({\n                title: json.title,\n                body: json.body\n            }));\n    }\n\n    // componentWillMount() {\n    //     console.log('Component Will Mount');\n    // }\n\n    // componentDidUpdate() {\n    //     console.log('Component Did Update');\n    // }\n\n    // componentWillUpdate() {\n    //     console.log('Component Will Update');\n    // }\n\n    // componentWillReceiveProps(nextProps, nextState) {\n    //     console.log('Component Will Receive Props');\n    // }\n\n    // static getDerivedStateFromProps(nextProps, prevState) {\n    //     return null;\n    // }\n\n    render() {\n        return (\n            <div>\n                <h1>LifeCycleMethods</h1>\n            </div>\n        );\n    }\n}\n\nexport default LifeCycleMethods;","import React, { Component } from 'react';\nimport { Consumer } from '../../Context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n\n        let response = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n        let contact = response.data;\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        });\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        const { name, email, phone } = this.state;\n        if (name === '') {\n            this.setState({\n                errors: {\n                    name: 'Name is Required'\n                }\n            });\n            return;\n        }\n\n        if (email === '') {\n            this.setState({\n                errors: {\n                    email: 'Email is Required'\n                }\n            });\n            return;\n        }\n\n        if (phone === '') {\n            this.setState({\n                errors: {\n                    phone: 'Phone is Required'\n                }\n            });\n            return;\n        }\n\n        const { id } = this.props.match.params;\n\n        const updContact = {\n            name,\n            email,\n            phone\n        };\n\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n        dispatch({\n            type: 'UPDATE_CONTACT',\n            payload: res.data\n        });\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    }\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">\n                                EDIT CONTACT\n                        </div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup label=\"Name\"\n                                        placeholder=\"Enter Name...\"\n                                        name=\"name\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name} />\n                                    <TextInputGroup label=\"Email\"\n                                        placeholder=\"Enter Email...\"\n                                        name=\"email\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        type=\"email\"\n                                        error={errors.email} />\n                                    <TextInputGroup label=\"Phone\"\n                                        placeholder=\"Enter Phone Number...\"\n                                        name=\"phone\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone} />\n                                    <input type=\"submit\" value=\"Update Contact\"\n                                        className=\"btn btn-block btn-light\" />\n                                </form>\n                            </div>\n                        </div>)\n                }}\n            </Consumer>\n        );\n    }\n}\n\nexport default EditContact;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/layout/Header';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport About from './components/pages/About';\nimport { Provider } from './Context';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport NotFound from './components/pages/NotFound';\nimport LifeCycleMethods from './components/test/LifeCycleMethods';\nimport EditContact from './components/contacts/EditContact';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <div className=\"container\">\n            <Switch>\n              <Route path=\"/\" exact component={Contacts} />\n              <Route path=\"/contact/add\" exact component={AddContact} />\n              <Route path=\"/about\" exact component={About} />\n              <Route path=\"/contact/edit/:id\" exact component={EditContact} />\n              <Route path=\"/lcm\" exact component={LifeCycleMethods} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}